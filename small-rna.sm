#-*- mode: snakemake -*-
"""
This is a part of the pipeline utilities at Genomics Core Facility (GCF),  Trondheim

small-rna
===================================
small-rna Analysis Pipeline.

Documentation: https://github.com/small-rna
Authors:
Arnar Flatberg / flatberg <arnar.flatberg@gmail.com>
"""

from os.path import join, abspath, dirname
from os import makedirs, environ
import sys
import yaml

from snakemake.workflow import srcdir
from snakemake.logging import logger
from snakemake.utils import update_config

TMPDIR = os.environ.get('TMPDIR', '/tmp')
# environment variables can override config file
INTERIM_DIR = environ.get('GCF-INTERIM') or config.get('interim_dir', abspath('data/tmp'))
makedirs(INTERIM_DIR, exist_ok=True)
EXT_DIR = environ.get('GCF-EXT') or config.get('ext_dir', abspath('data/ext'))
makedirs(EXT_DIR, exist_ok=True)
FASTQ_DIR =  environ.get('GCF-FASTQ') or config.get('fastq_dir', abspath('data/raw/fastq'))
makedirs(FASTQ_DIR, exist_ok=True)
PROCESSED_DIR =  environ.get('GCF-PROCESSED') or config.get('processed_dir', abspath('data/processed'))
makedirs(PROCESSED_DIR, exist_ok=True)

extra_conf_fn = srcdir('small-rna.config')
if os.path.exists(extra_conf_fn):
    with open(extra_conf_fn) as fh:
        c  = yaml.load(fh) or {}
        update_config(config, c)

include:
    'rules/filter.rules'
include:
    'rules/quant.rules'


onsuccess:
    # write config
    from datetime import datetime
    import copy
    import yaml
    
    dt = datetime.now()
    final_conf_fn = 'small-rna_{}_{}_{}.success.config'.format(dt.year, dt.month, dt.day)
    if os.path.exists(final_conf_fn):
        base_fn = copy.copy(final_conf_fn)
        for i in range(999):
            final_conf_fn = 'small-rna_{}_{}_{}_#{}.success.config'.format(dt.year, dt.month, dt.day, i)
            if not os.path.exists(final_conf_fn):
                break
    if os.path.exists(final_conf_fn):
        raise ValueError('this is just too many runs on the same day')
    config_path = dirname(srcdir('small-rna.config'))
    final_conf_fn = join(config_path,  final_conf_fn)
    with open(final_conf_fn) as fh:
        yaml.dump(config, final_conf_fn, default_flow_style=False)
