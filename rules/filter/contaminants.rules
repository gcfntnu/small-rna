#-*- mode:snakemake -*-
"""
http://seqanswers.com/forums/archive/index.php/t-42552.html
Those are common contaminant microbes that we encounter in sequencing
https://drive.google.com/file/d/0B3llHR93L14wZ1N6akxrSW16Z0U/view?usp=sharing
bbmap.sh in=ref.fa 
bbduk.sh -Xmx1g in=reads.fq out=clean.fq ref=phix.fasta k=31 hdist=1


NOTES:
emvec looks to be too diverse and perhaps only used when vector contamination is suspected
"""


rule contaminants_bacterial:
    params:
        url = 'https://drive.google.com/file/d/0B3llHR93L14wZ1N6akxrSW16Z0U/view?usp=sharing',
        file = 'data/ext/fusedEPmasked2.fa.gz'
    output:
        'data/ext/smallrna/contaminants/bacterial_common_JGI/fasta/fusedEPmasked2.fa'
    shell:
        """gunzip {params.file} -c | sed 's/ /_/g' > {output}"""

rule contaminants_univec_fasta:
    params:
        url = 'http://ftp.ncbi.nlm.nih.gov/pub/UniVec/UniVec',
        url_core = 'http://ftp.ncbi.nlm.nih.gov/pub/UniVec/UniVec_Core'
    output:
        'data/ext/smallrna/contaminants/univec/fasta/univec.fa'
    shell:
        'wget {params.url_core} -O- > {output}'

rule contaminants_univec_anno:
    input:
        rules.contaminants_univec_fasta.output
    output:
        'data/ext/smallrna/contaminants/univec/anno.tsv'
    shell:
        """
        grep '>' {input} | sed 's/ /\t/' > {output}
        """
    
rule contaminants_emvec_fasta:
    """emvec processing from centrifuge code
    """
    params:
        url = 'http://ftp.ebi.ac.uk/pub/databases/emvec/emvec.dat.gz'
    output:
        'data/ext/smallrna/contaminants/emvec/fasta/emvec.fa'
    shell:
        """
        wget {params.url} -O- | gunzip -c | grep -E '^DE|^ ' | awk '/^DE/ {{ sub(/DE */,">"); gsub(/[ |]/,"_") }}; {{ print }}' | awk '/^ / {{ gsub(/ /,""); sub(/[0-9]*$/,"") }}; {{ print}}' > {output}
        """

rule contaminants_emvec_anno:
    input:
        rules.contaminants_emvec_fasta.output
    output:
        'data/ext/smallrna/contaminants/emvec/anno.tsv'
    shell:
        """
        grep '>' {input} | sed 's/ /\t/' > {output}
        """

rule contaminants_fasta:
    input:
        rules.contaminants_bacterial.output, rules.contaminants_univec_fasta.output
    output:
        'data/ext/smallrna/contaminants/fasta/contaminants.fa'
    shell:
        'cat {input} > {output}'
        
rule contaminants_index_bowtie:
    input:
        'data/ext/smallrna/contaminants/fasta/contaminants.fa'
    params:
        index = 'data/ext/smallrna/contaminants/index/cont'
    output:
        'data/ext/smallrna/contaminants/index/cont.1.ebwt'
    conda:
        'envs/contaminants.yaml'
    shell:
        'bowtie-build {input} {params.index}'
        
rule contaminants_filter_bowtie:
    input:
        fastq = _filter_get_calibrator_clean,
        index = rules.contaminants_index_bowtie.output
    output:
        fastq = 'data/tmp/GCF-2018-547-tmp/smallrna/filtered/{sample}/{sample}.contaminants.bowtie.clean.fastq',
        counts = 'data/processed/smallrna/filtered/{sample}/{sample}.contaminants.bowtie.counts',
        sam = temp('data/tmp/GCF-2018-547-tmp/smallrna/filtered/{sample}/{sample}.contaminants.sam')
    conda:
        'envs/contaminants.yaml'
    params:
        args = '-n 0 -k 1 -l 18 -q --best --norc -S ',
        index = rules.contaminants_index_bowtie.params.index
    threads:
        4
    log:
        bowtie = 'logs/{sample}/filter.contaminants.bowtie.log',
        error = 'logs/{sample}/contaminants.error'
    shell:
        'bowtie {params.index} '
        '{input.fastq} '
        '--un {output.fastq} '
        '-p {threads} '
        '{params.args} '
        '2>> {log.bowtie} '
        '| tee {output.sam} '
        '| samtools view -q 5 -S  - | cut -f3 | sort | uniq -c  > {output.counts} '
        '2>> {log.error} '

rule contaminants_filter_bbduk:
    input:
        fastq = _filter_get_calibrator_clean,
        ref = 'data/ext/smallrna/contaminants/fasta/contaminants.fa'
    output:
        fastq = 'data/tmp/GCF-2018-547-tmp/smallrna/filtered/{sample}/{sample}.contaminants.bbduk.clean.fastq',
        counts = 'data/processed/smallrna/filtered/{sample}/{sample}.contaminants.bbduk.counts'
    params:
        args = 'rcomp=f k=27'
    conda:
        'envs/calibrators.yaml'
    log:
        'logs/{sample}/filter.contaminants.bbduk.log'
    threads:
        4
    shell:
        'bbduk.sh in={input.fastq} overwrite=true k=27 threads={threads} rcomp=f outu={output.fastq} stats={output.counts} ref={input.ref} 2> {log}'

def _filter_get_contaminants_clean(wildcards):
    cnt = config['filter'].get('filter_contaminants', True)
    cnt_quant = config['filter'].get('contaminant_quantifier', 'bowtie')
    if cnt:
        if cnt_quant in ['bowtie', 'bbduk']:
            return join(FILTER_INTERIM, wildcards.sample, '{}.contaminants.{}.clean.fastq'.format(wildcards.sample, cnt_quant))
        elif cnt_quant == 'unitas':
            assert(config['filter'].get('quant') == 'unitas')
            return _filter_get_trimmed(wildcards)
        else:
            raise ValueError('contaminant quantifier option not valid: {}'.format(quant))
    return _filter_get_trimmed(wildcards)
