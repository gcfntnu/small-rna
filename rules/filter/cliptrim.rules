#-*- mode:snakemake -*-

ADAPTER = config.get('adapter', 'TGGAATTCTCGG')

rule filter_adapter_atropos:
    input:
        fastq = _filter_get_raw
    output:
        trimmed = temp('data/tmp/GCF-2018-547-tmp/smallrna/filtered/{sample}/trimmed.atropos.fastq'),
        untrimmed = temp('data/tmp/GCF-2018-547-tmp/smallrna/filtered/{sample}/untrimmed.atropos.fastq')
    params:
        args = '--mirna'
    singularity:
        'docker://flatberg/test:first-test'
    threads:
        4
    log:
        'logs/{sample}/atropos.log'
    shell:
        'atropos trim '
        '-se {input.fastq} '
        '--untrimmed-output {output.untrimmed} '
        '-o {output.trimmed} '
        '-T {threads} '
        '{params.args} '
        ' > {log}'

rule filter_bioscientific_trimmed:
    input:
        fastq = rules.filter_adapter_atropos.output.trimmed
    output:
        fastq = temp('data/tmp/GCF-2018-547-tmp/smallrna/filtered/{sample}/trimmed.bioscientific.1.fastq')
    params:
        '-f 4 -t 4 -A -G --low_complexity_filter'
    threads:
        4
    conda:
        'envs/filter.yaml'
    log:
        html = 'logs/{sample}/fastp.trimmed.html',
        json = 'logs/{sample}/fastp.trimmed.json'
    shell:
        'fastp '
        '-i {input.fastq} '
        '-o {output.fastq} '
        '{params} ' 
        '--json {log.json} '
        '--html {log.html} '

rule filter_bioscientific_untrimmed:
    input:
        fastq = rules.filter_adapter_atropos.output.untrimmed
    output:
        fastq = temp('data/tmp/GCF-2018-547-tmp/smallrna/filtered/{sample}/trimmed.bioscientific.2.fastq')
    params:
        '-f 4 -A -G --low_complexity_filter'
    threads:
        4
    conda:
        'envs/filter.yaml'
    log:
        html = 'logs/{sample}/fastp.untrimmed.html',
        json = 'logs/{sample}/fastp.untrimmed.json'
    shell:
        'fastp '
        '-i {input.fastq} '
        '-o {output.fastq} '
        '{params} ' 
        '--json {log.json} '
        '--html {log.html} '

rule filter_bioscientific:
    input:
        rules.filter_bioscientific_trimmed.output.fastq,
        rules.filter_bioscientific_untrimmed.output.fastq
    output:
        'data/tmp/GCF-2018-547-tmp/smallrna/filtered/{sample}/trimmed.bioscientific.fastq.gz'
    shell:
        'cat {input} | gzip > {output}'

rule filter_trueseq:
    input:
        rules.filter_adapter_atropos.output
    output:
        'data/tmp/GCF-2018-547-tmp/smallrna/filtered/{sample}/trimmed.trueseq.fastq.gz'
    params:
        '-A -G --low_complexity_filter'
    threads:
        4
    conda:
        'envs/filter.yaml'
    log:
        html = 'logs/{sample}/fastp.html',
        json = 'logs/{sample}/fastp.json'
    shell:
        'cat {input} | fastp --stdin '
        '-o {output} '
        '{params} ' 
        '--json {log.json} '
        '--html {log.html} '

def _filter_get_trimmed(wildcards):
    if not config.get('trim', True):
        return _filter_get_raw(wildcards)
    if 'kit' in wildcards:
        kit = wildcards.kit
    else:
        kit = config.get('kit', 'bioscientific')
    if kit not in ['trueseq', 'bioscientific']:
        raise ValueError('Kit argument: {} not supprted'.format(kit))
    return 'data/tmp/GCF-2018-547-tmp/smallrna/filtered/{}/trimmed.{}.fastq.gz'.format(wildcards.sample, kit)
