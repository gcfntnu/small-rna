#-*- mode:snakemake -*-

import os
from os.path import join

include:
    '../gcfdb/mirbase.db'
include:
    '../gcfdb/gtrnadb.db'
include:
    '../gcfdb/ensembl.db'

ORG = config['organism']

rule quickmirseq_mirbase_index:
    input:
        mature = rules.mirbase_mature_fasta.output,
        hairpin = rules.mirbase_hairpin_fasta.output
    params:
        index = join(EXT_DIR, 'quickmirseq', ORG),
        args = '--cutoff 0 --library stranded --extension5 4 --extension3 5'
    singularity:
        'docker://flatberg/quickmirseq:01'
    output:
        join(EXT_DIR, 'quickmirseq', ORG, 'mirna_0_0.fa')
    shell:
        'perl $QuickMIRSeq/QuickMIRSeq-build.pl '
        '--target {params.index} '
        '--mirna {input.mature} '
        '--hairpin {input.hairpin} '
        '{params.args} '

rule quickmirseq_smallrna_index:
    input:
        trna = rules.gtrnadb_trna.output,
        non_coding = rules.ensembl_db_downloads.output.noncoding
    params:
        index = join(EXT_DIR, 'quickmirseq', ORG)
    output:
        join(EXT_DIR, 'quickmirseq', ORG, 'smallRNA.fa'),
        join(EXT_DIR, 'quickmirseq', ORG, 'smallRNA.1.ebwt'),
        join(EXT_DIR, 'quickmirseq', ORG, 'smallRNA.2.ebwt'),
        join(EXT_DIR, 'quickmirseq', ORG, 'smallRNA.3.ebwt'),
        join(EXT_DIR, 'quickmirseq', ORG, 'smallRNA.4.ebwt'),
        join(EXT_DIR, 'quickmirseq', ORG, 'smallRNA.rev.1.ebwt'),
        join(EXT_DIR, 'quickmirseq', ORG, 'smallRNA.rev.2.ebwt')
    singularity:
        'docker://flatberg/quickmirseq:01'  
    shell:
        # merge creates a fasta file one entry per biotype 
        """
        perl $QuickMIRSeq/merge_tRNA.pl {input.trna} > {output[0]}
        perl $QuickMIRSeq/merge_smallRNA.pl {input.non_coding} >> {output[0]}
        bowtie-build {output[0]} {params.index}/smallRNA
        """

rule quickmirseq_mrna_index:
    input:
        cdna = rules.ensembl_db_downloads.output.cdna
    params:
        index = join(EXT_DIR, 'quickmirseq', ORG)
    output:
        join(EXT_DIR, 'quickmirseq', ORG, 'mrna.fa'),
        join(EXT_DIR, 'quickmirseq', ORG, 'mrna.1.ebwt'),
        join(EXT_DIR, 'quickmirseq', ORG, 'mrna.2.ebwt'),
        join(EXT_DIR, 'quickmirseq', ORG, 'mrna.rev.1.ebwt'),
        join(EXT_DIR, 'quickmirseq', ORG, 'mrna.rev.2.ebwt')
    singularity:
        'docker://flatberg/quickmirseq:01' 
    shell:
        'bowtie-build {input.cdna} {params.index}/mrna '
        '&& cp {input.cdna} {output[0]} '
        
rule quickmirseq_genome_index:
    input:
        genome = rules.ensembl_db_downloads.output.genome
    params:
        index_base = join(EXT_DIR, 'quickmirseq', ORG, 'genome')
    output:
        join(EXT_DIR, 'quickmirseq', ORG, 'genome.fa'),
        join(EXT_DIR, 'quickmirseq', ORG, 'genome.1.ebwt'),
        join(EXT_DIR, 'quickmirseq', ORG, 'genome.2.ebwt'),
        join(EXT_DIR, 'quickmirseq', ORG, 'genome.rev.1.ebwt'),
        join(EXT_DIR, 'quickmirseq', ORG, 'genome.rev.2.ebwt')
    singularity:
        'docker://flatberg/quickmirseq:01' 
    shell:
        'bowtie-build {input.genome} {params.index_base} '
        '&& cp {input.noncoding} {output[0]} '

rule quickmirseq_download:
    input:
        expand(rules.quickmirseq_mirbase_index.input, org=ORG),
        expand(rules.quickmirseq_smallrna_index.input, org=config['organism']),
        expand(rules.quickmirseq_mrna_index.input, org=config['organism'])
        #expand(rules.quickmirseq_genome_index.input, org=config['organism'])
        
rule quickmirseq_build_db:
    input:
        join(EXT_DIR, 'quickmirseq', config['organism'], 'mirna_0_0.fa'),
        join(EXT_DIR, 'quickmirseq', config['organism'], 'smallRNA.fa'),
        join(EXT_DIR, 'quickmirseq', config['organism'], 'mrna.fa')
        #join(EXT_DIR, 'quickmirseq', config['organism'], 'genome.fa')
    output:
        touch(join(EXT_DIR, 'quickmirseq', '.db_done'))
